{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProject\\\\recipe-project\\\\src\\\\components\\\\new-recipe-form.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewRecipeForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      inputText: '',\n      textareaText: '',\n      originalName: ''\n    }; // this.recipeToEdit;\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.isExistingRecipe = this.isExistingRecipe.bind(this);\n    this.buildStringFromIngredients = this.buildStringFromIngredients.bind(this);\n  }\n\n  closeNewRecipeForm() {\n    ReactDOM.unmountComponentAtNode(document.getElementById('new-container'));\n  }\n\n  componentWillMount() {\n    this.setState({\n      originalName: this.props.name\n    }); // if (this.props.recipeInfo) {\n\n    if (this.props.ingredients) {\n      this.setState({\n        inputText: this.props.name,\n        textareaText: this.buildStringFromIngredients(this.props.ingredients)\n      });\n      this.recipeToEdit = {\n        name: this.props.name,\n        ingredients: this.buildStringFromIngredients(this.props.ingredients)\n      };\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // making sure it doesn't submit right away\n    // Change local storage to the file that was submitted.\n\n    var newRecipeDetails = {\n      title: this.state.inputText.trim() ? this.state.inputText : 'Untitled',\n      ingredients: this.getIngredientsFromString(this.state.textareaText)\n    }; // use a callback function?\n\n    if (this.recipeToEdit) {\n      this.props.modifyRecipe(newRecipeDetails, this.state.originalName); // have to give it its original name\n    } else {\n      this.props.addRecipe(newRecipeDetails);\n    } //add a check - if there is no title or no ingredients, don't add them to the table.\n    // add submission on Enter?\n\n\n    this.closeNewRecipeForm();\n  }\n\n  isExistingRecipe() {\n    return this.recipeToEdit;\n  }\n\n  getIngredientsFromString(str) {\n    return str.split(\",\").map(ingredient => ingredient.trim());\n  }\n\n  buildStringFromIngredients(arr) {\n    return arr.join(', ');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"new-recipe-form\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-recipe-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-font\",\n          children: \"Add a Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"close-icon\",\n          onClick: this.closeNewRecipeForm,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-recipe-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Recipe Name\",\n            value: this.state.inputText // value={this.state.inputText || this.isExistingRecipe().name}\n            ,\n            onChange: event => this.setState({\n              inputText: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Enter ingredients, Separated, By commas\",\n            value: this.state.textareaText // value={this.state.textareaText || this.isExistingRecipe().ingredients }\n            ,\n            onChange: event => this.setState({\n              textareaText: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-recipe-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"add-recipe-button\",\n          children: \"Add a Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-btn\",\n          onClick: this.closeNewRecipeForm,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default NewRecipeForm;","map":{"version":3,"sources":["D:/ReactProject/recipe-project/src/components/new-recipe-form.js"],"names":["React","Component","ReactDOM","NewRecipeForm","constructor","state","inputText","textareaText","originalName","handleSubmit","bind","isExistingRecipe","buildStringFromIngredients","closeNewRecipeForm","unmountComponentAtNode","document","getElementById","componentWillMount","setState","props","name","ingredients","recipeToEdit","event","preventDefault","newRecipeDetails","title","trim","getIngredientsFromString","modifyRecipe","addRecipe","str","split","map","ingredient","arr","join","render","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass NewRecipeForm extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tinputText: '',\r\n\t\t\ttextareaText: '',\r\n\t\t\toriginalName: ''\r\n\t\t}\r\n\r\n\t\t// this.recipeToEdit;\r\n\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.isExistingRecipe = this.isExistingRecipe.bind(this);\r\n\t\tthis.buildStringFromIngredients = this.buildStringFromIngredients.bind(this);\r\n\t}\r\n\r\n\tcloseNewRecipeForm() {\r\n\t\tReactDOM.unmountComponentAtNode(document.getElementById('new-container'));\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.setState({\r\n\t\t\toriginalName: this.props.name\r\n\t\t});\r\n\t\t// if (this.props.recipeInfo) {\r\n\t\tif (this.props.ingredients) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tinputText: this.props.name,\r\n\t\t\t\ttextareaText: this.buildStringFromIngredients(this.props.ingredients)\r\n\t\t\t});\r\n\r\n\t\t\tthis.recipeToEdit = {\r\n\t\t\t\tname: this.props.name,\r\n\t\t\t\tingredients: this.buildStringFromIngredients(this.props.ingredients)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n\t\tevent.preventDefault(); // making sure it doesn't submit right away\r\n\t\t// Change local storage to the file that was submitted.\r\n\t\tvar newRecipeDetails = {\r\n\t\t\ttitle: this.state.inputText.trim() ? this.state.inputText : 'Untitled',\r\n\t\t\tingredients: this.getIngredientsFromString(this.state.textareaText)\r\n\t\t};\r\n\t\t// use a callback function?\r\n\t\tif (this.recipeToEdit) {\r\n\t\t\tthis.props.modifyRecipe(newRecipeDetails, this.state.originalName); // have to give it its original name\r\n\t\t} else {\r\n\t\t\tthis.props.addRecipe(newRecipeDetails);\r\n\t\t}\r\n\r\n\t\t//add a check - if there is no title or no ingredients, don't add them to the table.\r\n\t\t// add submission on Enter?\r\n\t\tthis.closeNewRecipeForm();\r\n\t}\r\n\r\n\tisExistingRecipe() {\r\n\t\treturn this.recipeToEdit;\r\n\t}\r\n\r\n\tgetIngredientsFromString(str) {\r\n\t\treturn str.split(\",\").map(ingredient => ingredient.trim());\r\n\t}\r\n\r\n\tbuildStringFromIngredients(arr) {\r\n\t\treturn arr.join(', ');\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form className=\"new-recipe-form\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t<div className=\"new-recipe-header\">\r\n\t\t\t\t\t<p className=\"m-font\">Add a Recipe</p>\r\n\t\t\t\t\t<p className=\"close-icon\" onClick={this.closeNewRecipeForm}>&#10005;</p>\r\n\t\t\t\t\t{/* <i className=\"fa fa-times close-form\" aria-hidden=\"true\" onClick={this.closeNewRecipeForm}></i> */}\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<div className=\"new-recipe-body\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>Recipe</p>\r\n\t\t\t\t\t\t<input type=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Recipe Name\"\r\n\t\t\t\t\t\t\tvalue={this.state.inputText }\r\n\t\t\t\t\t\t\t// value={this.state.inputText || this.isExistingRecipe().name}\r\n\t\t\t\t\t\t\tonChange={(event) => this.setState({ inputText: event.target.value })}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>Ingredients</p>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tplaceholder=\"Enter ingredients, Separated, By commas\"\r\n\t\t\t\t\t\t\tvalue={this.state.textareaText }\r\n\t\t\t\t\t\t\t// value={this.state.textareaText || this.isExistingRecipe().ingredients }\r\n\t\t\t\t\t\t\tonChange={(event) => this.setState({ textareaText: event.target.value })}></textarea>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"new-recipe-footer\">\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"add-recipe-button\">Add a Recipe</button>\r\n\t\t\t\t\t\t<button className=\"edit-btn\" onClick={this.closeNewRecipeForm}>Close</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\nexport default NewRecipeForm;"]},"metadata":{},"sourceType":"module"}